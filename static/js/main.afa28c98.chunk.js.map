{"version":3,"sources":["Map.js","App.js","serviceWorker.js","index.js"],"names":["map","marker","answers","Map","props","mySubmitHandler","event","preventDefault","push","state","cur_selected","nextQuestion","cur_q","setState","questions","length","counter","last","pop","forEach","element","i","parseInt","correct","document","getElementById","innerHTML","btoa","setLatLng","coords","close","onValueChange","target","value","update","e","distance","getDistance","latitude","_latlng","lat","longitude","lng","latlng","question","alternatives","gps","L","center","zoom","layers","tileLayer","attribution","this","addTo","Gps","autoActive","autoCenter","callErr","on","closePopup","activate","Col","Row","id","style","width","height","className","sm","Form","onSubmit","Group","as","Check","type","label","name","onChange","span","offset","Button","React","Component","App","Container","fluid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.afa28c98.chunk.js","sourcesContent":["import React from \"react\";\r\nimport L from \"leaflet\";\r\nimport Gps from \"leaflet-gps\";\r\nimport { getDistance } from \"geolib\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\n\r\nlet map;\r\nlet marker;\r\nlet answers = [];\r\nclass Map extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [\r\n        {\r\n          question: \"Fråga 1: hur många kvitton har ni lämnat in?\",\r\n          alternatives: [\"1:  20\", \"X: 30\", \"2: 40 \"],\r\n          coords: [[58.393402, 15.571559]],\r\n        },\r\n        {\r\n          question: \"Fråga 2: Är Anna snäll?\",\r\n          alternatives: [\"1:  Alltid\", \"X: Ibland\", \"2: Nope \"],\r\n          coords: [\r\n            [58.395042, 15.573374],\r\n            [58.394588, 15.573764],\r\n            [58.394128, 15.573791],\r\n          ],\r\n        },\r\n        {\r\n          question: \"Fråga 3: Är Anna snäll?\",\r\n          alternatives: [\"1:  Alltid\", \"X: Ibland\", \"2: Nope \"],\r\n          coords: [\r\n            [58.395263, 15.575809],\r\n            [58.394909, 15.575895],\r\n            [58.394454, 15.576185],\r\n          ],\r\n        },\r\n        {\r\n          question: \"Fråga 4: Är Anna snäll?\",\r\n          alternatives: [\"1:  Alltid\", \"X: Ibland\", \"2: Nope \"],\r\n          coords: [\r\n            [58.395209, 15.579323],\r\n            [58.394753, 15.58092],\r\n            [58.394112, 15.581162],\r\n          ],\r\n        },\r\n        {\r\n          question: \"Fråga 5: Är Anna snäll?\",\r\n          alternatives: [\"1:  Alltid\", \"X: Ibland\", \"2: Nope \"],\r\n          coords: [\r\n            [58.397357, 15.584412],\r\n            [58.397957, 15.585718],\r\n            [58.398288, 15.585109],\r\n          ],\r\n        },\r\n        {\r\n          question: \"Fråga 6: Är Anna snäll?\",\r\n          alternatives: [\"1:  Alltid\", \"X: Ibland\", \"2: Nope \"],\r\n          coords: [\r\n            [58.399052, 15.58888],\r\n            [58.39982, 15.584758],\r\n            [58.400277, 15.584439],\r\n          ],\r\n        },\r\n        {\r\n          question: \"Fråga 7: Är Anna snäll?\",\r\n          alternatives: [\"1:  Alltid\", \"X: Ibland\", \"2: Nope \"],\r\n          coords: [\r\n            [58.400593, 15.577492],\r\n            [58.400473, 15.57819],\r\n            [58.400488, 15.577109],\r\n          ],\r\n        },\r\n        {\r\n          question: \"Fråga 8: Är Anna snäll?\",\r\n          alternatives: [\"1:  Alltid\", \"X: Ibland\", \"2: Nope \"],\r\n          coords: [\r\n            [58.399805, 15.572748],\r\n            [58.399723, 15.573215],\r\n            [58.400095, 15.573402],\r\n          ],\r\n        },\r\n        {\r\n          question: \"Fråga 9: Är Anna snäll?\",\r\n          alternatives: [\"1:  Alltid\", \"X: Ibland\", \"2: Nope \"],\r\n          coords: [\r\n            [58.396961, 15.57265],\r\n            [58.396708, 15.573321],\r\n            [58.396997, 15.573738],\r\n          ],\r\n        },\r\n        {\r\n          question: \"Fråga 10: Är Anna snäll?\",\r\n          alternatives: [\"1:  Alltid\", \"X: Ibland\", \"2: Nope \"],\r\n          coords: [\r\n            [58.393476, 15.569286],\r\n            [58.393386, 15.570079],\r\n            [58.39322, 15.568755],\r\n          ],\r\n        },\r\n      ],\r\n      cur_q: 0,\r\n      close: true,\r\n      cur_selected: null,\r\n      correct: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      gps: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    map = L.map(\"map\", {\r\n      center: [58.393709, 15.571049],\r\n      zoom: 14,\r\n      layers: [\r\n        L.tileLayer(\r\n          \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}.png\",\r\n          {\r\n            attribution: \"Antique\",\r\n          }\r\n        ),\r\n      ],\r\n    });\r\n    marker = L.marker(this.state.questions[this.state.cur_q].coords[0]).addTo(map);\r\n\r\n    var gps = new Gps({\r\n      autoActive: true,\r\n      autoCenter: false,\r\n      callErr: () => {\r\n        this.setState({ gps: false });\r\n      },\r\n    }); //inizialize control\r\n\r\n    gps\r\n      .on(\"gps:located\", (e) => {\r\n        //\te.marker.bindPopup(e.latlng.toString()).openPopup()\r\n        //console.log(e.latlng, map.getCenter());\r\n\r\n        this.update(e);\r\n      })\r\n      .on(\"gps:disabled\", (e) => {\r\n        e.marker.closePopup();\r\n      });\r\n\r\n    gps.addTo(map);\r\n    gps.activate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col>\r\n        <Row>\r\n          <div id=\"map\" style={{ width: \"100vw\", height: \"100vw\" }}></div>\r\n        </Row>\r\n        <Row className=\"p-2\">\r\n          <Col sm={12}>\r\n            {!this.state.gps && (\r\n              <h4>För att gå tipsrundan måste du tillåta gps-användning</h4>\r\n            )}\r\n          </Col>\r\n          <Col sm={12}>\r\n            {!this.state.cur_q < this.state.questions.length && <h4 id=\"infotext\"></h4>}\r\n          </Col>\r\n\r\n          {!this.state.close && this.state.gps && <h1>Gå till nästa fråga</h1>}\r\n          {this.state.gps &&\r\n            this.state.close &&\r\n            this.state.cur_q < this.state.questions.length && (\r\n              <Col>\r\n                <h3>{this.state.questions[this.state.cur_q].question}</h3>\r\n\r\n                <h3>\r\n                  <Form onSubmit={this.mySubmitHandler}>\r\n                    <fieldset>\r\n                      <Form.Group as={Row}>\r\n                        <Col sm={10}>\r\n                          <Form.Check\r\n                            type=\"radio\"\r\n                            label={this.state.questions[this.state.cur_q].alternatives[0]}\r\n                            name=\"Radios\"\r\n                            id=\"Radios1\"\r\n                            value={0}\r\n                            onChange={this.onValueChange}\r\n                          />\r\n                          <Form.Check\r\n                            type=\"radio\"\r\n                            label={this.state.questions[this.state.cur_q].alternatives[1]}\r\n                            name=\"Radios\"\r\n                            id=\"Radios2\"\r\n                            value={1}\r\n                            onChange={this.onValueChange}\r\n                          />\r\n                          <Form.Check\r\n                            type=\"radio\"\r\n                            label={this.state.questions[this.state.cur_q].alternatives[2]}\r\n                            name=\"Radios\"\r\n                            id=\"Radios3\"\r\n                            value={2}\r\n                            onChange={this.onValueChange}\r\n                          />\r\n                        </Col>\r\n                      </Form.Group>\r\n                    </fieldset>\r\n\r\n                    {this.state.cur_selected && (\r\n                      <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                          <Button type=\"submit\">Nästa</Button>\r\n                        </Col>\r\n                      </Form.Group>\r\n                    )}\r\n                  </Form>\r\n                </h3>\r\n              </Col>\r\n            )}\r\n        </Row>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  mySubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    answers.push(this.state.cur_selected);\r\n    let nextQuestion = this.state.cur_q + 1;\r\n    this.setState({ cur_q: nextQuestion });\r\n\r\n    if (nextQuestion === this.state.questions.length) {\r\n      let counter = 0;\r\n      let last = answers.pop();\r\n      answers.forEach((element, i) => {\r\n        if (parseInt(element) === this.state.correct[i]) {\r\n          ++counter;\r\n        }\r\n      });\r\n\r\n      document.getElementById(\"infotext\").innerHTML =\r\n        \"Bra jobbat! <br/> Skicka följande kod samt svaret på utslagsfrågan till Ekonomichefen så blir hon glad. <br/> Kod: \" +\r\n        +last +\r\n        btoa(counter) +\r\n        \"<br/> <br/>Utslagsfråga: Vilket är ert favoritminne från Spex 20?\";\r\n    } else {\r\n      marker.setLatLng(\r\n        this.state.questions[nextQuestion].coords[this.state.cur_selected]\r\n      );\r\n      this.setState({\r\n        cur_selected: null,\r\n      });\r\n      this.setState({ close: false });\r\n    }\r\n  };\r\n\r\n  onValueChange = (event) => {\r\n    this.setState({\r\n      cur_selected: event.target.value,\r\n    });\r\n  };\r\n\r\n  update = (e) => {\r\n    let distance = getDistance(\r\n      { latitude: marker._latlng.lat, longitude: marker._latlng.lng },\r\n      { latitude: e.latlng.lat, longitude: e.latlng.lng }\r\n    );\r\n\r\n    this.setState({ close: distance < 20 });\r\n  };\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Map from \"./Map\";\n\nfunction App() {\n  return (\n    <Container fluid={true} className=\"p-0 m-0\">\n      <Map />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}